name: build_ubuntu

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_ubuntu.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_ubuntu:
    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]

    runs-on: ubuntu-latest

    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_ubuntu
      TransformCoordinate_VERSION: "0.0.10"
      artifact_name: build_ubuntu

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Install apt packages
        run: |
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install -y -q cmake build-essential xvfb xpra \
              libglu1-mesa-dev libpulse-mainloop-glib0 \
              debhelper fakeroot \
              qt6-tools-dev qt6-tools-dev-tools \
              qt6-base-dev qt6-base-dev-tools qt6-qpa-plugins \
              libqt6svg6-dev qt6-l10n-tools qt6-translations-l10n \
              qt6-scxml-dev qt6-multimedia-dev libqt6serialport6-dev \
              qt6-webengine-dev qt6-webengine-dev-tools

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: CPACK
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          cmake ${{github.workspace}}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target package

      - name: build_debpackage.sh
        working-directory: ${{github.workspace}}
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          ./build_debpackage.sh /usr/lib/`uname -m`-linux-gnu/qt5
          cp ../transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb

      - name: Update xml file
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        working-directory: ${{github.workspace}}
        run: |
          sudo Xvfb :99 -ac &
          export DISPLAY=:99.0
          sudo apt install ./transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb
          MD5=`md5sum transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb|awk '{print $1}'`
          echo "MD5:${MD5}"
          /opt/TransformCoordinate/bin/TransformCoordinate.sh \
              -f "${{github.workspace}}/update_linux.xml" \
              --md5 ${MD5} \
              -m "${{env.TransformCoordinate_VERSION}}" \
              -u "https://github.com/KangLin/TransformCoordinate/releases/download/v${{env.TransformCoordinate_VERSION}}/transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb;https://sourceforge.net/projects/TransformCoordinate/files/v${{env.TransformCoordinate_VERSION}}/transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb"

      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/build/transformcoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb
            ${{github.workspace}}/build/update_linux.xml

#    - name: Upload To Github Release
#      if: ${{ matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
#      uses: softprops/action-gh-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        prerelease: true
#        body: |
#           [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
#        files: |
#            ${{github.workspace}}/TransformCoordinate_${{env.TransformCoordinate_VERSION}}_amd64.deb
