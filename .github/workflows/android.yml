# 作者：康林<kl222@126.com>

name: android

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_android.outputs.name }}

jobs:
  build_android:

    strategy:
      matrix:
        BUILD_TYPE: [Release]
        qt_arch: [android_arm64_v8a, android_armv7, android_x86_64]
        qt_version: [6.6.2]
        include:
          - qt_arch: android_arm64_v8a
            VCPKG_TARGET_TRIPLET: arm64-android

          - BUILD_TYPE: Release
            qt_arch: android_armv7
            VCPKG_TARGET_TRIPLET: arm-android

          - qt_arch: android_x86_64 
            VCPKG_TARGET_TRIPLET: x64-android

    runs-on: ubuntu-latest

    env:
      TransformCoordinate_VERSION: "v0.0.11"
      VCPKGGITCOMMITID: a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6
      VCPKG_TARGET_TRIPLET: ${{matrix.VCPKG_TARGET_TRIPLET}}
      VCPKG_HOST_TRIPLET: x64-linux
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      STOREPASS: ${{secrets.STOREPASS}}
      artifact_name: build_android
      ANDROID_PLATFORM: android-23
      ANDROID_NATIVE_API_LEVEL: 23
      qt_modules: 'qtimageformats qtmultimedia qtscxml'

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: make directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Cache installed
        #if: false
        uses: actions/cache@v2
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: install_qt${{matrix.qt_version}}_${{matrix.qt_arch}}_${{matrix.VCPKG_TARGET_TRIPLET}}_${{matrix.BUILD_TYPE}}

      - name: Install Qt of gcc_64
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOSL_DIR}}' # optional
          version: '${{matrix.qt_version}}'
          #host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          set-env: false
          cache: true
          cache-key-prefix: cached_qt

      - name: Install Qt of android
        uses: jurplel/install-qt-action@v3
        with:
          # Directory to install Qt
          dir: '${{env.TOOSL_DIR}}' # optional
          # Version of Qt to install
          version: '${{matrix.qt_version}}'
          # Host platform
          #host: linux # optional
          # Target platform for build
          target: 'android' # optional, default is desktop
          # Architecture for Windows/Android
          arch: '${{matrix.qt_arch}}' # optional
          # Additional Qt modules to install
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          # Whether or not to actually download Qt
          cache: true
          cache-key-prefix: cached_qt

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: build TransformCoordinate
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          sudo chmod 777 ${Qt6_DIR}/bin/qt-cmake
          ${Qt6_DIR}/bin/qt-cmake .. \
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
              -DQT_HOST_PATH=${Qt6_DIR}/../gcc_64 \
              -DQT_HOST_PATH=${Qt6_DIR}/../gcc_64 \
              -DQt6LinguistTools_DIR=${Qt6_DIR}/../gcc_64/lib/cmake/Qt6LinguistTools \
              -DQT_ANDROID_SIGN_APK=ON \              
              -DCMAKE_INSTALL_PREFIX=`pwd`/install
          cmake --build . --config ${{matrix.BUILD_TYPE}} --target all
          cmake --build . --config ${{matrix.BUILD_TYPE}}  --target install
          APK_FILE=`find . -name "android-*.apk"`
          cp $APK_FILE TransformCoordinate_${{env.TransformCoordinate_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk
          7z a TransformCoordinate_${{env.TransformCoordinate_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.zip install/*

      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.qt_version == '6.6.2' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/build/TransformCoordinate_${{env.TransformCoordinate_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk
            ${{github.workspace}}/build/TransformCoordinate_${{env.TransformCoordinate_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.zip
